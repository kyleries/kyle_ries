%header
  .top
    = link_to "Kyle Ries", '/', id: "logo"
    %nav
      %ul#main
        %li= link_to "Contact", '#', id: "contactlink"
        %li= link_to "About", about_path
  %h1.mid RAILS DEVELOPER+
  %h2 Knowledge, experience, and expertise in the rest of the Rails Ecosystem.
  #bottom
    %ul#skills
      %li#1= image_tag "html5.png"
      %li#2= image_tag "haml.png"
      %li#3= image_tag "rspec.png"
      %li#4= image_tag "sass.png"
      %li#5= image_tag "git.png"
      %li#6= image_tag "heroku.png"
      %li#7= image_tag "coffee-script.png"
    %aside#1.slidebox
      %p #{image_tag "HTML5_Logo_512.png", size: "50x50"} HTML5 is the next generation markup language. I love HTML5s rich capabilities and semantic roots. Rails supports HTML by default, thereby making my life happy. Future proofing is impossible, but to the extent that it can be mitigated, HTML5 is a great tool to have.
    %aside#2.slidebox
      %p #{image_tag "hamllogo.gif", size: "50x50"} HAML brings beauty back to the world of markup and templating. I use HAML in favor of ERB to make the markup more legible and easier to maintain. I just never became really quick typing <%= =>, so HAML saves me time.
    %aside#3.slidebox
      %p #{image_tag "rspec_logo.png", size: "50x50"} RSPEC makes testing...fun! I'm a huge proponent of the "Red, Green, Refactor" development cycle, and RSPEC and friends (Guard, Spork) bring a sense of gamification to the world of development.
    %aside#4.slidebox
      %p #{image_tag "Sass_Logo.gif", size: "50x50"} SASS is to CSS what HAML is to HTML, but on steroids. The ability to define variables, nested rules, and leverage mix-ins means less code and more logic. For a guy like me, that is music to my ears.
    %aside#5.slidebox
      %p #{image_tag "github_logo.png", size: "50x50"} GitHub is the de facto choice for Rails developers due to it's ease of use, intelligent design, and vibrant community. I favor GitHub for development, but am able to adapt to whichever versioning system is preferred. 
    %aside#6.slidebox
      %p #{image_tag "heroku-logo.png", size: "50x50"} Heroku makes production deployment a breeze for Rails Developers. I can commit to having your web app up and running on day one with this set-up. This is preferable for me so I can demonstrate the app to end users from a 'live' URL to get feedback ASAP.
    %aside#7.slidebox
      %p #{image_tag "coffeescript_logo.png", size: "50x50"} CoffeeScript completes my trifecta of abstraction languages (SASS and HAML being the other two). Here again, we see a reduction of punctuation in favor of logical structurining, speeding up development.

:javascript
  $("li").click(function(){
      var x = this.id;
      if ($("aside[id=" + x +"]").is(":hidden")) {
        $(".slidebox").hide("slow");
        $("aside[id=" + x +"]").slideDown("slow");
      } else {
    $("aside[id=" + x +"]").hide("slow");
    }
  });

= form_for @message, remote: true, url: {action: "create"}, html: {class: " ", id: "feedback-form"} do |f|
  
  #front
    %h3 Contact me!

    = f.text_field :name, placeholder: "Enter Your Name"

    = f.email_field :email, placeholder: "Enter Your Email Address"

    = f.telephone_field :phone, placeholder: "Enter Your Phone Number"

    = f.text_area :message, placeholder: "Enter Your Message. Something like: 'Kyle, you are the best. Let's work together!' would suffice.", size: "24x6"
  
    = f.submit "Send", id: "submits"

:javascript
  var submit = document.getElementById("submits");  
  var form = document.querySelector("form");
  var back = document.getElementById("back");
  var h3 = document.querySelector("h3");
  var contactlink = document.getElementById("contactlink");
        
  submit.addEventListener("click", formOut, false);
  h3.addEventListener("click", formOut, false);
  contactlink.addEventListener("click", formOut, false);
  form.addEventListener("submit", formSubmit, false);
  
  function formOut() {
    if(form.className===" " || form.className==="form-in") {
      if(Modernizr.cssanimations) {
        form.setAttribute("class","form-out");           
      } else {
        form.setAttribute("class","form-fallback");
        form.style.left = "0rem";
      }
      h3.innerHTML = "Hide contact form!";
    } else {
      if(Modernizr.cssanimations) {
        form.setAttribute("class","form-in");
      } else {
        form.setAttribute("class","");
        form.style.left = "-22rem";
      }
      h3.innerHTML = "Contact me!";
    }
  }
    
  function formSubmit(e) {
    h3.innerHTML = "Thank you!";
    
    //submit form via Ajax
  }
